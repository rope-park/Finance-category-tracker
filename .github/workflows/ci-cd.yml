name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
          POSTGRES_DB: finance_tracker_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm run install:all
    
    - name: Type check
      run: |
        npm run type-check --prefix apps/frontend
        npm run type-check --prefix apps/backend
    
    - name: Lint
      run: npm run lint
    
    - name: Test Backend
      run: npm test --prefix apps/backend
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: finance_tracker_test
        DB_USER: test
        DB_PASSWORD: test
        JWT_SECRET: test_secret
        NODE_ENV: test
    
    - name: Test Frontend
      run: npm test --prefix apps/frontend
    
    - name: Build Backend
      run: npm run build --prefix apps/backend
    
    - name: Build Frontend
      run: npm run build --prefix apps/frontend

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm run install:all
    
    - name: Build
      run: |
        npm run build --prefix apps/frontend
        npm run build --prefix apps/backend
    
    - name: Deploy to Staging
      run: echo "Deploy to staging environment"
      # 여기에 실제 배포 스크립트 추가

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        npm run install:all
    
    - name: Build
      run: |
        npm run build --prefix apps/frontend
        npm run build --prefix apps/backend
    
    - name: Deploy to Production
      run: echo "Deploy to production environment"
      # 여기에 실제 배포 스크립트 추가
