version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: finance-tracker-db
    environment:
      POSTGRES_DB: finance_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/backend/scripts/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    networks:
      - finance-tracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (Optional - for session management)
  redis:
    image: redis:7-alpine
    container_name: finance-tracker-redis
    ports:
      - "6379:6379"
    networks:
      - finance-tracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    container_name: finance-tracker-backend
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    environment:
      NODE_ENV: production
      NODE_PATH: /app/node_modules
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: finance_tracker
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_SSL: false
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ALLOWED_ORIGINS: "http://localhost,http://localhost:80,http://localhost:5173,http://localhost:3000"
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - finance-tracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    container_name: finance-tracker-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - finance-tracker-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: finance-tracker-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@finance-tracker.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - finance-tracker-network
    restart: unless-stopped
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local

networks:
  finance-tracker-network:
    driver: bridge
